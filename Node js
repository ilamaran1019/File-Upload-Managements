// server.js
const express = require("express");
const multer = require("multer");
const fs = require("fs");
const path = require("path");
const cors = require("cors");

const app = express();
const PORT = 3000;

// Enable CORS and JSON parsing
app.use(cors());
app.use(express.json());

// Folder to store uploaded files
const UPLOADS_DIR = path.join(__dirname, "uploads");

// Create uploads folder if not exists
if (!fs.existsSync(UPLOADS_DIR)) {
  fs.mkdirSync(UPLOADS_DIR);
}

// Multer configuration for file storage
const storage = multer.diskStorage({
  destination: (req, file, cb) => cb(null, UPLOADS_DIR),
  filename: (req, file, cb) => {
    const uniqueSuffix = Date.now() + "-" + Math.round(Math.random() * 1e9);
    cb(null, uniqueSuffix + "-" + file.originalname);
  },
});

const upload = multer({ storage });

// ✅ Upload a file
app.post("/upload", upload.single("file"), (req, res) => {
  res.json({
    message: "File uploaded successfully!",
    file: req.file,
  });
});

// 📂 List all uploaded files
app.get("/files", (req, res) => {
  fs.readdir(UPLOADS_DIR, (err, files) => {
    if (err) return res.status(500).json({ error: "Failed to list files" });
    res.json({ files });
  });
});

// 🗑️ Delete a specific file
app.delete("/files/:filename", (req, res) => {
  const filePath = path.join(UPLOADS_DIR, req.params.filename);
  fs.unlink(filePath, (err) => {
    if (err) return res.status(404).json({ error: "File not found" });
    res.json({ message: "File deleted successfully" });
  });
});

// 📁 Serve uploaded files statically
app.use("/uploads", express.static(UPLOADS_DIR));

app.listen(PORT, () => {
  console.log(`🚀 File Upload Management Server running at http://localhost:${PORT}`);
});
